###Creating Servlets Object 

1. Using Implementing Servlet

	Total 5 method in Servlets interface but only 3 is Life Cycle of sevlets

	// 3 method is life cycle method 

	ServletConfig conf;
		
	public void init(ServletConfig conf){
		
		this.conf=conf;
		System.out.println("Creating servlet object);
	}

	public void service(ServletRequest req,ServletResponse res){
	
		System.out.println("Servicing....");
	}

	public void destroy(){
		System.out.println(" Going to Destroy servlet object");
	}

	// non life cycle method
	
	public ServletConfig getServletConfig(){
		return this.conf;
	}
	
	public String getServletInfo(){
		return "This server is created by Rahul Gupta";	
	}

	// Mapping is most import in servlet creating (web.xml)

	<servlet>
		<servlet-name>first</servlet-name>
		<servlet-class>com.servlets.FirstServlet></servlet-class> // package with class name
	</servlet>

	
	<servlet-mapping>
		<servlet-name>first</servlet-name>
		<url-pattern>/web </url-pattern>
	</servlet-mapping>

2. GenricSevlet Class 
	
	GenricServlet class is an abstract class it override only service() method and remaining 
	has already present in Servlet.
	
	public void service(ServletRequest req, ServletResponse res){
		
		System.out.println(" this is servlet using generic servlet");
		res.setContentType("text/html");
		PrintWriter out=res.getWriter();
		out.println(<h1> This is servlet using Genric Servlet </h1>);

	}

3. Http Request 
	Why extends Http request servlet -> protocol specific functionalities 




### Deployment descripter 
web.xml is very useful in java project we map servlet in web.xml.
also in web.xml file we add welcome-file-list .



### parameter and attribute in java web application.









### Session tracking 
http is stateless protocol so server treat each request as new request so we need session tracking for mainain (data) of user. 
Session tracking is also known as state management.

Session tracking Technique

1. Cookies 
2. Hidden form field 
3. URL rewriting
4. HttpSession



################ JSP #################

Why JSP : JSP is java server page which run on server. due to some disadvantage of Servlet we use JSP
1. 
2.
3.


Important Tags in JSP

1. Declarative Tags
<%!  
  variable;
  method;
%> 

2. Scriptlet Tags 
<%
	Java source code 
	call the method print on jsp page 
%> 

3. Expression Tags (Expressive Tag)

<%=
	Statement
%>

4. Directive Tags 

	i. Page directive 
	ii. Include directive
	iii. Taglib directive

	In page Directive we use most of time is 
	
	1. Language 
	2. Extends
	3. import
	4. contentType
	5. info
	6. session
	7. isThreadSafe
	8. autoflush
	9. buffer
	10. isErrorPage
	11. PageEncoding
	12. errorPage
	13. isELIgnored


5. Custom Tag 
	step:1
		create a Tag file in src folder with .java class 

	step:2
		create tld file in WEB-INF folder (It is similar as web.xml file)

	step:3
		Declare directive as Taglib with uri and prefix in JSP Page and 
		Use custom tag in JSP page  




################ Filter API ############

			
1. Filter -->  	init()
		   	doFilter()
			destroy()	


2. FilterChain  


3. FilterConfig



############# JSTL ###########
JSTL stands for java standard tag library

Advantage of JSTL
1 . Fast Development 
2 . Code Reusability
3 . No need of use scriptlet tag


JSTL Tags 

1. Core Tags - variable support, URL management, flow control 

2. Function Tags - The functions tags provide support for string manipulation and string length.

3. Formating Tags- THe formating tags provide support for message formating, number and date formating, etc.

4. XML Tags- way of manupulating and creating XML document.

5. SQL Tags- The JSTL SQL tags provide SQL support.
